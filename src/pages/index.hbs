<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link
      rel="icon"
      type="image/x-icon"
      href="https://cdn.glitch.global/5521eed1-df1a-4037-847f-9c3e9bd77d2c/template.png?v=1641406430241"
    />
   
    <title>{{site_title}}</title>

    <script
      type="text/javascript"
      src="https://pingsandboxsdk.singularkey.com/latest/singularkey.js" 
    ></script>
    
  </head>
  
  <body>  
    <div class="background">
      <div class="shape"></div>
      <div class="shape"></div>
    </div>
    <div class="content" role="header"></div>
    <div class="wrapper">
      <div class="content" role="main">
        <!-- This is the start of content for our page -->
        <script>
          (function() {
            console.log('Starting idle timer');
            const idleDurationSecs = 1500;    // X number of seconds
            const redirectUrl = 'https://orchestrate.pingidentity.cloud/';  // Redirect idle users to this URL
            let idleTimeout; // variable to hold the timeout, do not modify

            const resetIdleTimeout = function() {
              // Clears the existing timeout
              console.log('Resetting idle timer')
              if(idleTimeout) clearTimeout(idleTimeout);
                // Set a new idle timeout to load the redirectUrl after idleDurationSecs
                idleTimeout = setTimeout(() => location.href = redirectUrl, idleDurationSecs * 1000);
            };

            // Init on page load
            resetIdleTimeout();

            // Reset the idle timeout on any of the events listed below
            ['click', 'touchstart', 'keyup'].forEach(evt => 
              document.addEventListener(evt, resetIdleTimeout, false)
            );
          })();
        </script>
        <div id="widget" class="skWidget widget"></div>
        <script
          type="text/javascript"
          src="https://pingsandboxsdk.singularkey.com/latest/singularkey.js"
        ></script>

      </div>
    </div>
    
    
    <script>
      const apiBaseURL = "{{base_url}}/v1";
      const companyId = "{{company_id}}";
      const policyId = "{{policy_id}}";
      const access_token = "{{access_token}}";

      var props = {
        config: {
          method: "runFlow",
          apiRoot: apiBaseURL,
          accessToken: access_token,
          companyId: companyId,
          policyId: policyId
        },
        useModal: false,
        successCallback,
        errorCallback,
        onCloseModal
      };
          
      /*** Invoke Singular Key Widget ****/
      singularkey.skRenderScreen(document.getElementsByClassName("skWidget")[0],props);
      
      function successCallback(response) {
        console.log(response);
      }

      function errorCallback(error) {
        console.log(error);
      }

      function onCloseModal() {
        console.log("onCloseModal");
      }

    </script>
    
  </body>
</html>
